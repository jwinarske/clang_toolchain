
SET(LIBCXX_C_FLAGS ${TARGET_CONFIG})
SET(LIBCXX_CXX_FLAGS "-I${THIRD_PARTY_DIR}/llvm-project/libcxxabi/include -I${THIRD_PARTY_DIR}/llvm-project/libcxx/include ${TARGET_CONFIG}")
SET(LIBCXX_LINKER_FLAGS "-nostdlib -fuse-ld=lld")

ExternalProject_Add(libcxx
    DOWNLOAD_COMMAND ""
    SOURCE_DIR ${LLVM_SRC_DIR}
    SOURCE_SUBDIR libcxx
    BUILD_IN_SOURCE 0
    UPDATE_COMMAND ""
    CMAKE_ARGS
        -DCMAKE_TOOLCHAIN_FILE=${CMAKE_BINARY_DIR}/toolchain.cmake
        -DCMAKE_INSTALL_PREFIX=${TOOLCHAIN_DIR}
        -DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -DCMAKE_C_FLAGS=${LIBCXX_C_FLAGS}
        -DCMAKE_CXX_FLAGS=${LIBCXX_CXX_FLAGS}
        -DCMAKE_SHARED_LINKER_FLAGS=${LIBCXX_LINKER_FLAGS}
        -DLLVM_COMPILER_CHECKED=ON
        -DLLVM_PATH=${LLVM_SRC_DIR}/llvm
        -DLLVM_CONFIG_PATH=${LLVM_CONFIG_PATH}
        -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF
        -DLIBCXX_STANDALONE_BUILD=OFF
        -DLIBCXX_TARGET_TRIPLE=${TARGET_TRIPLE}
        -DLIBCXX_SYSROOT=${TOOLCHAIN_DIR}
        -DLIBCXX_USE_COMPILER_RT=${BUILD_COMPILER_RT}
        -DLIBCXX_USE_LLVM_UNWINDER=ON
        -DLIBCXX_CXX_ABI=libcxxabi
        -DLIBCXX_INCLUDE_TESTS=ON
        -DLIBCXX_HAS_MUSL_LIBC=${BUILD_MUSL_CLIB}
        -DLIBCXX_ENABLE_FILESYSTEM=OFF
)
add_dependencies(libcxx libcxxabi)
if(BUILD_PLATFORM_SYSROOT)
    add_dependencies(libcxx sysroot)
endif()
